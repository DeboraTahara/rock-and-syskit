---
layout: documentation
title: Installation
sort_info: 5
---

# Rock Installation
{:.no_toc}

<div class="alert alert-warning" role="alert" id="not_mainline">
As of today (June 2017), not all the software used in this guide has reached
Rock mainline repositories. For this reason, one needs to start using the
buildconf repository on GitHub's
[`rock-gazebo/buildconf`](https://github.com/rock-gazebo/buildconf) instead of
the default one at
[`rock-core/buildconf`](https://github.com/rock-core/buildconf). This
installation guide already reflects this. This configuration automatically
selects the 'master' flavor as described in this section
</div>

- TOC
{:toc}

## Rock Versions and Flavors

A system can base itself on different "flavors" of Rock. One can basically
choose one out of three:

- **the latest release** version of the Rock Core software. Once released, it
  will not change, but may see subsequent point releases that would only differ
  by (important) bugfixes. The only way a release-based install will get modifications
  is if the developer changes the base release.
- **the stable flavor** is the last release plus bugfixes. Unlike the releases,
  updating a 'stable' system will always land you on the latest release, and
  in-between releases will get patched with bugfixes. This **does** include being
  updated automatically to new major releases.
- **the master flavor** is the development branch, and may break.

Rock's primary platform is Ubuntu. The only guarantee made by the Rock team is
that Rock's current release and master branches work on the current Ubuntu LTS
version and often works on the latest Ubuntu version.

Rock has no option to install from binary, the only currently supported method
of install is from source.

Other linux-based platforms (Debian, Arch, â€¦) are known to work, but since they
don't see regular use, installation may not be as streamlined as on Ubuntu.
MacOS X also has seen some Rock usage, but is seldom used and therefore can
cause problems. Windows has seen some preliminary usage.

## Installation {#install}

The code that is needed to follow this guide is not yet part of a core release.

 1. [Install Gazebo 8](http://gazebosim.org).

 1. Install Ruby and verify that the version matches (must be 2.1 or later, we recommend 2.3.x)

    ~~~
    sudo apt-get install ruby ruby-dev
    ruby --version
    ~~~

 2. Create and "cd" into the directory in which you want to work. This directory will
    contain both the toolchain (that we will install in the next steps), as well as your
    own code. This is called a _workspace_.

    ~~~
    mkdir dev
    cd dev
    ~~~

 3. Download autoproj's bootstrap script

    ~~~
    wget http://rock-robotics.org/autoproj_bootstrap
    ~~~

 4. Bootstrap your installation. This installs autoproj and checks out
    the main build configuration, but does not check out packages. Because
    [this guide relies on code not yet in rock-core itself](#not_mainline), one must use the master flavor
    of Rock to go through this documentation. Select the defaults for all
    the proposed configuration options.

    ~~~
    ruby autoproj_bootstrap \
        git https://github.com/rock-gazebo/buildconf
    ~~~

 5. Update and build the installation's default packages.Select the defaults for all
    the proposed configuration options.

    ~~~
    source env.sh
    aup --all -k
    amake --all -k
    ~~~


You **must** remember to source the generated env.sh script at the end of the
amake command !!! You must also do in new terminals before you can interact with
the Rock installation
{: .callout .callout-warning}

**Next**: an overview of [how to interact day-to-day with the Rock
workspace](day_to_day.html). Alternatively, if you already know about it, you
can go straight to [setting up Syskit and Gazebo](getting_started.html)
{: .next-page}
